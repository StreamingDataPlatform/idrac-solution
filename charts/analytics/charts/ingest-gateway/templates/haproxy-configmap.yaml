apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}
data:
  haproxy.cfg: |
    global
      daemon
      maxconn 4096
      log stdout format raw daemon info
    defaults
      mode http
      retries 3
      timeout connect 3s
      timeout client 20s
      timeout server 10s
      timeout check 2s
      option httplog
      {{- if .Values.haproxy.enableRetry }}
      option redispatch
      retry-on empty-response conn-failure
      {{- end}}
      log global
    frontend www
      bind *:80
      {{- if .Values.haproxy.enableStats }}
      stats enable
      stats uri /haproxy-stats
      stats realm Welcome login
      stats auth admin:{{ randAlphaNum 16 }}
      stats admin if TRUE
      {{- end}}
      acl path_policy path_end event watermark
      acl writerid_policy url_sub writerId=
      use_backend writerid if path_policy writerid_policy
      default_backend rr
    backend writerid
      balance url_param writerId
      hash-type consistent
      {{- range $idx := (int .Values.gateway.replicas | until) }}
      server writerid-{{ $idx | toString }} {{ $.Release.Name }}-{{ $idx | toString }}.{{ $.Release.Name }}-backend.{{ $.Release.Namespace }}.svc.cluster.local:8080 check
      {{- end }}
    backend rr
      balance roundrobin
      {{- range $idx := (int .Values.gateway.replicas | until) }}
      server rr-{{ $idx | toString }} {{ $.Release.Name }}-{{ $idx | toString }}.{{ $.Release.Name }}-backend.{{ $.Release.Namespace }}.svc.cluster.local:8080 check
      {{- end }}
  entry.sh: |
    #!/bin/sh
    /usr/local/etc/haproxy/haproxy.cfg/script.sh&
    /docker-entrypoint.sh haproxy -f /usr/local/etc/haproxy/haproxy.cfg/haproxy.cfg
  script.sh: |
    #!/bin/sh
    FILE="/usr/local/etc/haproxy/haproxy.cfg/haproxy.cfg"
    LAST=`md5sum "$FILE" | awk '{print $1}'`
    while :
    do
      sleep 1
      NEW=`md5sum "$FILE" | awk '{print $1}'`
      if [ "$NEW" != "$LAST" ]
      then
        PID=`pidof haproxy | awk '{print $2}'`
        if [ "$PID" -gt 0 ]
        then
          kill -s HUP "$PID"
        fi
        LAST="$NEW"
      fi
    done