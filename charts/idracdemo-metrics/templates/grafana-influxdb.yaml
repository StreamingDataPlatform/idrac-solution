apiVersion: v1
kind: Secret
metadata:
  name: idrac-influxdb-secret
type: Opaque
data:
  username: {{ .Values.influxdb_creds.username | b64enc | quote }}
  password: {{ .Values.influxdb_creds.password | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: idrac-grafana-secret
type: Opaque
data:
  username: {{ .Values.grafana_creds.username | b64enc | quote }}
  password: {{ .Values.grafana_creds.password | b64enc | quote }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: idracsolution-influxdb
  labels:
    app: idracsolution-influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: idracsolution-influxdb
  serviceName: idracsolution-influxdb
  template:
    metadata:      
      labels:
        app: idracsolution-influxdb
    spec:
      containers:
      - env:
        - name: INFLUXDB_HTTP_AUTH_ENABLED
          value: "true"
        - name: INFLUXDB_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: idrac-influxdb-secret
        - name: INFLUXDB_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: idrac-influxdb-secret
        name: influxdb
        image: {{ .Values.image.repository }}/influxdb:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 8086
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/influxdb/
          name: database-volume
  volumeClaimTemplates:
  - metadata:
      name: database-volume      
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.metrics_cluster_storage.influxdb }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: idracsolution-grafana
  labels:
    app: idracsolution-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: idracsolution-grafana
  serviceName: idracsolution-grafana
  template:
    metadata:      
      labels:
        app: idracsolution-grafana
    spec:
      containers:
      - env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: idrac-grafana-secret
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: idrac-grafana-secret
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "false"
        - name: GF_PATHS_DATA
          value: /var/lib/grafana/data
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INFLUXDB_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: idrac-influxdb-secret
        - name: INFLUXDB_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: idrac-influxdb-secret
        name: grafana
        image: {{ .Values.image.repository }}/grafana:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 3000
          name: grafana
          protocol: TCP
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/grafana/provisioning/datasources
          name: datasources
        - mountPath: /var/lib/grafana/data
          name: database-volume
      volumes:
      - configMap:
          defaultMode: 484
          name: idracsolution-grafana-datasources
        name: datasources
  volumeClaimTemplates:
  - metadata:
      name: database-volume      
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.metrics_cluster_storage.influxdb }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: idracsolution-grafana-datasources
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      database: idracsolution
      jsonData:
        timeInterval: 10s
      name: idracsolution-influxdb
      user: {{ .Values.influxdb_creds.username }}
      secureJsonData:
        password: {{ .Values.influxdb_creds.password  }}
      type: influxdb
      url: {{ .Values.idracsolution_metrics.influxDBUri }}

---
apiVersion: v1
kind: Service
metadata:
  name: idracsolution-influxdb
spec:
  ports:
  - name: http
    port: 8086
    protocol: TCP
    targetPort: 8086
  selector:
    app: idracsolution-influxdb
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: idracsolution-grafana
spec:
  ports:
  - name: idracsolution-grafana
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: idracsolution-grafana
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-nautilus
    kubernetes.io/tls-acme: "true"
  labels:
    app.kubernetes.io/name: idracsolution-grafana
  name: idracsolution-grafana
spec:
  rules:
  - host: {{ .Values.service_name }}.{{ .Values.fqn }}
    http:
      paths:
      - backend:
          serviceName: idracsolution-grafana
          servicePort: 3000
        path: /
