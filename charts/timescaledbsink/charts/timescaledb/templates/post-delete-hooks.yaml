kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: "{{.Release.Name}}-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
rules:
  - apiGroups: [""]
    resources:
      - persistentvolumeclaims
      - endpoints
      - services
    verbs:
      - get
      - list
      - delete

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: "{{.Release.Name}}-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
subjects:
  - kind: ServiceAccount
    name: "{{.Release.Name}}-post-delete"
    namespace: "{{.Release.Namespace}}"
roleRef:
  kind: ClusterRole
  name: "{{.Release.Name}}-post-delete"
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{.Release.Name}}-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{.Release.Name}}-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
data:
  post-delete.sh: |
    #!/bin/bash
    kubectl delete $(kubectl get pvc,ep,service -n "{{ .Release.Namespace }}" -l release="{{.Release.Name}}" -o name) -n "{{ .Release.Namespace }}"
    
---

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Release.Name}}-post-delete"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation #, hook-failed
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 20
  template:
    metadata:
      name: "{{.Release.Name}}-post-delete"
    spec:
      serviceAccountName: "{{.Release.Name}}-post-delete"
      restartPolicy: Never
      containers:
        - name: post-delete-job
          image: "{{ .Values.imageRegistry }}/{{ .Values.hooks.image.repository }}:{{ .Values.hooks.image.tag }}"
          command:
            - /scripts/post-delete.sh
          volumeMounts:
            - name: sh
              mountPath: /scripts
              readOnly: true
      volumes:
        - name: sh
          configMap:
            name: "{{.Release.Name}}-post-delete"
            defaultMode: 0555
